/**
 * This file was automatically generated by Nexus 0.11.7
 * Do not make changes to this file directly
 */

import * as types from "../types"


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
}

export interface NexusGenRootTypes {
  AuthPayloadDoctors: { // root type
    doctor?: NexusGenRootTypes['Doctor'] | null; // Doctor
    token?: string | null; // String
  }
  AuthPayloadPatients: { // root type
    patient?: NexusGenRootTypes['Patient'] | null; // Patient
    token?: string | null; // String
  }
  Doctor: { // root type
    email: string; // String!
    id: string; // ID!
    name: string; // String!
    password: string; // String!
    speciality: string; // String!
  }
  Mutation: {};
  Patient: { // root type
    birthday: string; // String!
    email: string; // String!
    id: string; // ID!
    name: string; // String!
    password: string; // String!
  }
  Query: {};
  Survey: { // root type
    answered: boolean; // Boolean!
    content: string; // String!
    createdAt: any; // DateTime!
    id: string; // ID!
    published: boolean; // Boolean!
    title: string; // String!
    updatedAt: any; // DateTime!
  }
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
  DateTime: any;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
}

export interface NexusGenFieldTypes {
  AuthPayloadDoctors: { // field return type
    doctor: NexusGenRootTypes['Doctor'] | null; // Doctor
    token: string | null; // String
  }
  AuthPayloadPatients: { // field return type
    patient: NexusGenRootTypes['Patient'] | null; // Patient
    token: string | null; // String
  }
  Doctor: { // field return type
    email: string; // String!
    id: string; // ID!
    name: string; // String!
    password: string; // String!
    patients: NexusGenRootTypes['Patient'][] | null; // [Patient!]
    speciality: string; // String!
    surveys: NexusGenRootTypes['Survey'][] | null; // [Survey!]
  }
  Mutation: { // field return type
    addDoctorToPatient: NexusGenRootTypes['Doctor'] | null; // Doctor
    createDraftSurvey: NexusGenRootTypes['Survey'] | null; // Survey
    deleteDoctor: NexusGenRootTypes['Doctor'] | null; // Doctor
    deletePatient: NexusGenRootTypes['Patient'] | null; // Patient
    deleteSurvey: NexusGenRootTypes['Survey'] | null; // Survey
    editPatient: NexusGenRootTypes['AuthPayloadPatients'] | null; // AuthPayloadPatients
    loginDoctor: NexusGenRootTypes['AuthPayloadDoctors'] | null; // AuthPayloadDoctors
    loginPatient: NexusGenRootTypes['AuthPayloadPatients'] | null; // AuthPayloadPatients
    markReadSurvey: NexusGenRootTypes['Survey'] | null; // Survey
    publishSurvey: NexusGenRootTypes['Survey'] | null; // Survey
    signupDoctor: NexusGenRootTypes['AuthPayloadDoctors'] | null; // AuthPayloadDoctors
    signupPatient: NexusGenRootTypes['AuthPayloadPatients'] | null; // AuthPayloadPatients
    unpublishSurvey: NexusGenRootTypes['Survey'] | null; // Survey
  }
  Patient: { // field return type
    birthday: string; // String!
    doctors: NexusGenRootTypes['Doctor'][] | null; // [Doctor!]
    email: string; // String!
    id: string; // ID!
    name: string; // String!
    password: string; // String!
    surveys: NexusGenRootTypes['Survey'][] | null; // [Survey!]
  }
  Query: { // field return type
    doctor: NexusGenRootTypes['Doctor'] | null; // Doctor
    doctors: NexusGenRootTypes['Doctor'][] | null; // [Doctor!]
    filterSurveys: NexusGenRootTypes['Survey'][] | null; // [Survey!]
    meDoctor: NexusGenRootTypes['Doctor'] | null; // Doctor
    mePatient: NexusGenRootTypes['Patient'] | null; // Patient
    patient: NexusGenRootTypes['Patient'] | null; // Patient
    patients: NexusGenRootTypes['Patient'][] | null; // [Patient!]
    survey: NexusGenRootTypes['Survey'] | null; // Survey
    surveys: NexusGenRootTypes['Survey'][] | null; // [Survey!]
    surveysNotPublished: NexusGenRootTypes['Survey'][] | null; // [Survey!]
    surveysPublished: NexusGenRootTypes['Survey'][] | null; // [Survey!]
  }
  Survey: { // field return type
    answered: boolean; // Boolean!
    content: string; // String!
    createdAt: any; // DateTime!
    id: string; // ID!
    patient: NexusGenRootTypes['Patient']; // Patient!
    published: boolean; // Boolean!
    submitter: NexusGenRootTypes['Doctor']; // Doctor!
    title: string; // String!
    updatedAt: any; // DateTime!
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    addDoctorToPatient: { // args
      id?: string | null; // ID
      patientEmail?: string | null; // String
    }
    createDraftSurvey: { // args
      content: string; // String!
      patientEmail: string; // String!
      submitterEmail: string; // String!
      title: string; // String!
    }
    deleteDoctor: { // args
      id?: string | null; // ID
    }
    deletePatient: { // args
      id?: string | null; // ID
    }
    deleteSurvey: { // args
      id?: string | null; // ID
    }
    editPatient: { // args
      birthday: string; // String!
      email: string; // String!
      id?: string | null; // ID
      name: string; // String!
    }
    loginDoctor: { // args
      email?: string | null; // String
      password?: string | null; // String
    }
    loginPatient: { // args
      email?: string | null; // String
      password?: string | null; // String
    }
    markReadSurvey: { // args
      id?: string | null; // ID
    }
    publishSurvey: { // args
      id?: string | null; // ID
    }
    signupDoctor: { // args
      email: string; // String!
      name: string; // String!
      password: string; // String!
      speciality: string; // String!
    }
    signupPatient: { // args
      birthday: string; // String!
      email: string; // String!
      name: string; // String!
      password: string; // String!
    }
    unpublishSurvey: { // args
      id?: string | null; // ID
    }
  }
  Query: {
    doctor: { // args
      id?: string | null; // ID
    }
    filterSurveys: { // args
      searchString?: string | null; // String
    }
    patient: { // args
      id?: string | null; // ID
    }
    survey: { // args
      id?: string | null; // ID
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "AuthPayloadDoctors" | "AuthPayloadPatients" | "Doctor" | "Mutation" | "Patient" | "Query" | "Survey";

export type NexusGenInputNames = never;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "DateTime" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: types.Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}